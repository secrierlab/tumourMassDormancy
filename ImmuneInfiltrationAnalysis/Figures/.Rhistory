FishersResults$P_value <- pvalue
p_adj <- p.adjust(pvalue, method = "BH")
FishersResults$P_adjust <- p_adj
FishersResults$LowerConfidenceInterval <- Lower_confidence_interval
FishersResults$UpperConfidenceInterval <- Upper_confidence_interval
##Save the results:
setwd("~/Documents/GitHub/tumourMassDormancy/FishersExactTest_EnrichmentAnalysis/Cancerwise_results/")
save(FishersResults, file = paste("FishersExactTestResults_",a,".RData",sep = ""))
}
############################################
##Plot the results:
############################################
setwd("~/Documents/GitHub/tumourMassDormancy/FishersExactTest_EnrichmentAnalysis/Cancerwise_results/")
load("FishersExactTestResults_ACC.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_BLCA.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_BRCA.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_CESC.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_CHOL.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_COAD.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
View(FishersResults)
load("FishersExactTestResults_ESCA.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_GBM.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_HNSC.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_KIRP.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_LGG.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_LIHC.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_LUAD.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_LUSC.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_OV.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_PAAD.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_PRAD.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_READ.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_SARC.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_SKCM.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_SKCM.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_STAD.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
View(FishersResults)
load("FishersExactTestResults_UCEC.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_UCS.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
load("FishersExactTestResults_UVM.RData")
FishersResults <- FishersResults[FishersResults$P_adjust < 0.05,]
#Load packages:
library(corrplot)
library(ggpubr)
###############
###Load scores:
###############
setwd("~/Documents/GitHub/tumourMassDormancy/Data/ProgrammeScores/")
load("program_expression_scores_updated.RData")
View(prog_expr)
load("programme_scores_and_TMD_assignments.RData")
View(prog_expr)
###########################
#Load mutational signatures
###########################
setwd("~/Documents/GitHub/tumourMassDormancy/Data/MutationalSignatures/")
load("sigs.defaultnounknown.ACC.RData")
sigs.all <- sigs.defaultnounknown
###########################
#Load mutational signatures
###########################
setwd("~/Documents/GitHub/tumourMassDormancy/Data/MutationalSignatures/")
load("sigs.defaultnounknown.ACC.RData")
sigs.all <- sigs.defaultnounknown
CT <- c("BLCA","BRCA","CESC","CHOL","COAD","ESCA","GBM","HNSC","KICH","KIRC","KIRP","LGG","LIHC","LUAD","LUSC","MESO","OV","PAAD","PRAD","READ","SARC","SKCM","STAD","TGCT","THCA","THYM","UCEC","UCS")
for (a in CT) {
load(paste("sigs.defaultnounknown.",a,".RData",sep = ""))
sigs.all <- rbind(sigs.all,sigs.defaultnounknown)
}
#Remove signatures which are likely to be artifacts (>SBS44)
sigs.all <- sigs.all[,1:49]
#############################
#Merge the two dataframes together:
sigs.all$SampleID <- sapply(rownames(sigs.all), function(x)
paste(strsplit(x,"-")[[1]][1:4],collapse="-"))
sig_corr <- merge(sigs.all, prog_expr,
by.x = "SampleID", by.y = "SampleID")
signatures <- colnames(sigs.all)
sig_corr <- sig_corr[,colnames(sig_corr) %in% c(signatures,"mean_APOBEC","Exhaustion","TumourMassDormancy"),]
View(sig_corr)
##########################################
####Pancancer correlation:
#########################################
pancacer_SBS_matrix <- cor(sig_corr[, 2:53])
pancancer_p_matrix <- cor.mtest(sig_corr[, 2:53])$p
pancacer_SBS_matrix <- pancacer_SBS_matrix[1:49,50:52]
pancancer_p_matrix <- pancancer_p_matrix[1:49,50:52]
View(pancacer_SBS_matrix)
View(pancancer_p_matrix)
pancancer_p_matrix[is.na(pancancer_p_matrix)] <- 1
pancacer_SBS_matrix[is.na(pancacer_SBS_matrix)] <- 0
pancancer_p_matrix <- data.frame(pancancer_p_matrix)
pancacer_SBS_matrix <- data.frame(pancacer_SBS_matrix)
colnames(pancancer_p_matrix) <- colnames(pancacer_SBS_matrix)
rownames(pancancer_p_matrix) <- rownames(pancacer_SBS_matrix)
#Remove non-sigificnat signatures:
pancacer_SBS_matrix <- pancacer_SBS_matrix[!(rownames(pancacer_SBS_matrix) %in% c("SBS7a","SBS7c","SBS7d","SBS9","SBS11","SBS12","SBS17a","SBS19","SBS23","SBS24","SBS25","SBS26","SBS27","SBS28","SBS29","SBS33","SBS34","SBS35","SBS36","SBS37","SBS38","SBS41","SBS42","SBS43")),]
pancancer_p_matrix <- pancancer_p_matrix[!(rownames(pancancer_p_matrix) %in% c("SBS7a","SBS7c","SBS7d","SBS9","SBS11","SBS12","SBS17a","SBS19","SBS23","SBS24","SBS25","SBS26","SBS27","SBS28","SBS29","SBS33","SBS34","SBS35","SBS36","SBS37","SBS38","SBS41","SBS42","SBS43")),]
pancacer_SBS_matrix <- as.matrix(pancacer_SBS_matrix)
pancancer_p_matrix <- as.matrix(pancancer_p_matrix)
setwd("~/Documents/GitHub/tumourMassDormancy/MutationalSignature_correlations/Figures/")
pdf("PancancerMutationalSigantureProgrammeCorrelations.pdf",height = 10,width = 5)
corrplot(pancacer_SBS_matrix,
method = "color",
insig = "label_sig",
p.mat = pancancer_p_matrix,
cl.pos = "b",
pch.cex = 1,
is.corr = F,
tl.col = "black",
cl.length = 3,
cl.cex = 0.8)
dev.off()
##############################################################
##Cancerwise programme correlations with mutational signatures
#############################################################
sig_corr <- merge(sigs.all, prog_expr,
by.x = "SampleID", by.y = "SampleID")
sig_corr <- sig_corr[,colnames(sig_corr) %in% c(signatures,"mean_APOBEC","Exhaustion","AngiogenicDormancy","ImmunogenicDormancy","TumourMassDormancy","cancer_type"),]
CT <- unique(sig_corr$cancer_type)
setwd("~/Documents/GitHub/tumourMassDormancy/MutationalSignature_correlations/CancerwiseProgrammeCorrelations/")
CT <- CT[!(CT %in% c("OV","TGCT","PAAD","MESO","CHOL","SKCM","KICH"))]
CT <- CT[order(CT)]
pancacer_SBS_matrix <- data.frame(pancacer_SBS_matrix)
pancancer_p_matrix <- data.frame(pancancer_p_matrix)
################Calculate cancerwise correlations
for (a in CT) {
test.data <- sig_corr[sig_corr$cancer_type %in% a,]
test.data$cancer_type <- NULL
SBS_matrix <- cor(test.data[, 2:53])
p_matrix <- cor.mtest(test.data[, 2:53])$p
SBS_matrix <- SBS_matrix[1:49,50:52]
p_matrix <- p_matrix[1:49,50:52]
rownames(p_matrix) <- rownames(SBS_matrix)
colnames(SBS_matrix) <- c(paste("mean_APOBEC",a,sep = "_"),paste("Exhaustion",a,sep = "_"),paste("TumourMassDormancy",a,sep = "_"))
colnames(p_matrix) <- c(paste("mean_APOBEC",a,sep = "_"),paste("Exhaustion",a,sep = "_"),paste("TumourMassDormancy",a,sep = "_"))
SBS_matrix <- SBS_matrix[!(rownames(SBS_matrix) %in% c("SBS7a","SBS7c","SBS7d","SBS9","SBS11","SBS12","SBS17a","SBS19","SBS23","SBS24","SBS25","SBS26","SBS27","SBS28","SBS29","SBS33","SBS34","SBS35","SBS36","SBS37","SBS38","SBS41","SBS42","SBS43")),]
p_matrix <- p_matrix[!(rownames(p_matrix) %in% c("SBS7a","SBS7c","SBS7d","SBS9","SBS11","SBS12","SBS17a","SBS19","SBS23","SBS24","SBS25","SBS26","SBS27","SBS28","SBS29","SBS33","SBS34","SBS35","SBS36","SBS37","SBS38","SBS41","SBS42","SBS43")),]
p_matrix[is.na(p_matrix)] <- 1
SBS_matrix[is.na(SBS_matrix)] <- 0
p_matrix <- data.frame(p_matrix)
SBS_matrix <- data.frame(SBS_matrix)
pancacer_SBS_matrix <- cbind(pancacer_SBS_matrix, SBS_matrix)
pancancer_p_matrix <- cbind(pancancer_p_matrix, p_matrix)
}
pancacer_SBS_matrix <- as.matrix(pancacer_SBS_matrix)
pancancer_p_matrix <- as.matrix(pancancer_p_matrix)
######Plot the cancerwise correlations:
setwd("~/Documents/GitHub/tumourMassDormancy/MutationalSignature_correlations/Figures/")
pdf("CancerwiseMutationalSigantureProgrammeCorrelations.pdf",height = 10,width = 17)
corrplot(pancacer_SBS_matrix,
method = "color",
insig = "label_sig",
p.mat = pancancer_p_matrix,
cl.pos = "b",
pch.cex = 1,
is.corr = F,
tl.col = "black",
cl.length = 3,
cl.cex = 0.8)
dev.off()
###Order the columns and replot:
pancacer_SBS_matrix <- data.frame(pancacer_SBS_matrix)
pancancer_p_matrix <- data.frame(pancancer_p_matrix)
pancacer_SBS_matrix <- pancacer_SBS_matrix[,order(colnames(pancacer_SBS_matrix))]
pancancer_p_matrix <- pancancer_p_matrix[,order(colnames(pancancer_p_matrix))]
pancacer_SBS_matrix <- as.matrix(pancacer_SBS_matrix)
pancancer_p_matrix <- as.matrix(pancancer_p_matrix)
pdf("CancerwiseMutationalSigantureProgrammeCorrelationsOrdered.pdf",height = 10,width = 17)
corrplot(pancacer_SBS_matrix,
method = "color",
insig = "label_sig",
p.mat = pancancer_p_matrix,
cl.pos = "b",
pch.cex = 1,
is.corr = F,
tl.col = "black",
cl.length = 3,
cl.cex = 0.8)
dev.off()
######################
####Define gene lists:
######################
setwd("~/Documents/GitHub/tumourMassDormancy/Data/GeneLists/")
exhaustion_list <- read.table("exhaustionMarkers.txt", header = FALSE, sep = "\t")
exhaustion_list <- as.character(exhaustion_list$V1)
Gene_list <- read.table("dormancyMarkers_immunologic-angiogenic_updated.txt", header = TRUE,sep = "\t")
##Create a TMD gene list:
dormancy_list_upregulated <- Gene_list[Gene_list$Direction %in% "up",]
dormancy_list_upregulated <- as.character(dormancy_list_upregulated$Gene)
dormancy_list_downregulated <- Gene_list[Gene_list$Direction %in% "down",]
dormancy_list_downregulated <- as.character(dormancy_list_downregulated$Gene)
dormancy_list <- c(dormancy_list_upregulated, dormancy_list_downregulated)
##Create an immunologic dormancy gene list:
immunologic_dormancy <- Gene_list[Gene_list$Type %in% "immunologic",]
immunologic_dormancy_list_upregualted <- immunologic_dormancy[immunologic_dormancy$Direction %in% "up",]
immunologic_dormancy_list_upregualted <- as.character(immunologic_dormancy_list_upregualted$Gene)
immunologic_dormancy_list_downregulated <- immunologic_dormancy[immunologic_dormancy$Direction %in% "down",]
immunologic_dormancy_list_downregulated <- as.character(immunologic_dormancy_list_downregulated$Gene)
immunologic_dormancy_list <- c(immunologic_dormancy_list_downregulated, immunologic_dormancy_list_upregualted)
##Create an angiogenic dormancy gene list:
angiogenic_dormancy <- Gene_list[Gene_list$Type %in% "angiogenic",]
angiogenic_dormancy_upregulated <- angiogenic_dormancy[angiogenic_dormancy$Direction %in% "up",]
angiogenic_dormancy_upregulated <- as.character(angiogenic_dormancy_upregulated$Gene)
angiogenic_dormancy_downregulated <- angiogenic_dormancy[angiogenic_dormancy$Direction %in% "down",]
angiogenic_dormancy_downregulated <- as.character(angiogenic_dormancy_downregulated$Gene)
angiogenic_dormancy_list <- c(angiogenic_dormancy_downregulated,angiogenic_dormancy_upregulated)
#List of APOBEC genes:
apobec_list <- c("AICDA", "APOBEC1", "APOBEC2", "APOBEC3A", "APOBEC3B", "APOBEC3C", "APOBEC3D", "APOBEC3F", "APOBEC3G", "APOBEC3H", "APOBEC4")
all_genes <- c(exhaustion_list, immunologic_dormancy_list_upregualted, immunologic_dormancy_list_downregulated, angiogenic_dormancy_upregulated, angiogenic_dormancy_downregulated)
#Load packages:
library(biomaRt)
library(gtools)
library(corrplot)
##############################
###Convert gene lists to ENSG
##############################
all_genes_list <- c(dormancy_list, exhaustion_list, apobec_list)
human = useMart("ensembl", dataset="hsapiens_gene_ensembl")
biomart_conversion <- getBM(attributes=c("ensembl_gene_id", "hgnc_symbol"), values=all_genes_list, mart=human, filters = "hgnc_symbol")
#Two ENSG numbers are reported for PDCD1 - use ENSG00000188389 NOT ENSG00000276977
#Two ENSG numbers are reported for APOBEC3A - use ENSG00000128383 NOT ENSG00000262156
biomart_conversion <- biomart_conversion[!(biomart_conversion$ensembl_gene_id %in% c("ENSG00000276977","ENSG00000262156")),]
###########################
##Load the expression data:
###########################
setwd("~/Documents/GitHub/tumourMassDormancy/Data/RNA_seq/")
setwd("~/Documents/TMD_manuscript_data/RNA_seq")
load("combined_experssion_FPKM.RData") #or load "example_FPKM_data.RData" for an example data frame with 100 sample entries
rnaseq_cancer <- combined_data
for (i in all_genes_list) {
selected_biomart <- biomart_conversion[biomart_conversion$hgnc_symbol %in% i,]
a <- selected_biomart$ensembl_gene_id
rnaseq_cancer[[i]] <- rnaseq_cancer[[a]]
}
rnaseq_cancer <- rnaseq_cancer[,colnames(rnaseq_cancer) %in% all_genes_list]
rnaseq_cancer <- data.frame(t(rnaseq_cancer))
all_markers_list <- list("apobec" = apobec_list, "angiogenic_dormancy" = angiogenic_dormancy_list, "exhaustion" = exhaustion_list, "immunologic_dormancy" = immunologic_dormancy_list, "all_genes" = all_genes)
combs <- combinations(n=5, r=2)
setwd("~/Documents/GitHub/tumourMassDormancy/Programme_gene_APOBEC_correlation/Figures/")
for (n in 1:nrow(combs)){
genes1 <- all_markers_list[[combs[n, 1]]]
genes2 <- all_markers_list[[combs[n, 2]]]
name1 <- names(all_markers_list[combs[n, 1]])
name2 <- names(all_markers_list[combs[n, 2]])
correlation <- cor(t(rnaseq_cancer[c(genes1, genes2), ]), use = "pairwise.complete.obs")
p_matrix <- cor.mtest(t(rnaseq_cancer[c(genes1, genes2), ]), use = "pairwise.complete.obs")$p
correlation <- data.frame(correlation)
p_matrix <- data.frame(p_matrix)
colnames(p_matrix) <- colnames(correlation)
rownames(p_matrix) <- rownames(correlation)
correlation <- as.matrix(correlation[genes1, genes2])
p_matrix <- as.matrix(p_matrix[genes1, genes2])
corrplot(correlation)
pdf(file = paste(Sys.Date(), "correlation", name1, name2, ".pdf", sep = "_"), height = 6, width = 12)
corrplot(correlation,
method = "color",
tl.col = "black",
tl.cex = 1.2,
cl.cex = 1.2,
p.mat = p_matrix,
insig = "label_sig",
pch.col = "black",
pch.cex = 2.5)
dev.off()
}
##Load the required packages:
library(biomaRt)
library(ggpubr)
library(gtools)
library(corrplot)
###############
###Load scores:
###############
setwd("~/Documents/Wojciech_manuscript/ProgrammeScores")
###############
###Load scores:
###############
setwd("~/Documents/GitHub/tumourMassDormancy/Data/ProgrammeScores/")
load("program_expression_scores_updated.RData")
###########################
##Load the expression data and add cancer type annotation
###########################
setwd("~/Documents/Wojciech_manuscript_data/RNA_seq/")
load("combined_experssion_FPKM.RData")
###########################
##Load the expression data and add cancer type annotation
###########################
setwd("~/Documents/TMD_manuscript_data/RNA_seq/")
load("combined_experssion_FPKM.RData")
####################################################################################
#####Dormancy and exhaustion programmes correlation with mean APOBEC gene expression
####################################################################################
##Load the required packages:
library(biomaRt)
library(ggpubr)
library(gtools)
library(corrplot)
###############
###Load scores:
###############
setwd("~/Documents/GitHub/tumourMassDormancy/Data/ProgrammeScores/")
load("programme_scores_and_TMD_assignments.RData")
###################################################################
##Correlation plots between  programme scores and APOBEC expression
###################################################################
setwd("~/Documents/GitHub/tumourMassDormancy/Programme_APOBEC_correlation/Figures/")
#Plot correlations
pdf("APOBEC_vs_Exhaustion.pdf", width = 5, height = 5)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "Exhaustion",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
p + labs(x = "APOBEC", y = "Exhaustion")
dev.off()
pdf("APOBEC_vs_Dormancy.pdf", width = 5, height = 5)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "TumourMassDormancy",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
p + labs(x = "APOBEC", y = "Tumour Mass Dormancy")
dev.off()
pdf("APOBEC_vs_Immune_dormancy.pdf", width = 5, height = 5)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "ImmunogenicDormancy",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
p + labs(x = "APOBEC", y = "ImmunogenicDormancy")
dev.off()
pdf("APOBEC_vs_angiogenic_dormancy.pdf", width = 5, height = 5)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "AngiogenicDormancy",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
p + labs(x = "APOBEC", y = "AngiogenicDormancy")
dev.off()
pdf("APOBEC_vs_Exhaustion_cancerwise.pdf", width = 13, height = 9)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "Exhaustion",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
print(p + labs(x = "APOBEC", y = "Exhaustion") + facet_wrap(~cancer_type))
dev.off()
pdf("APOBEC_vs_Dormancy_cancerwise.pdf", width = 13, height = 9)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "TumourMassDormancy",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
print(p + labs(x = "APOBEC", y = "Tumour Mass Dormancy") + facet_wrap(~cancer_type))
dev.off()
pdf("APOBEC_vs_Immune_dormancy_cancerwise.pdf", width = 13, height = 9)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "ImmunogenicDormancy",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
print(p + labs(x = "APOBEC", y = "ImmunogenicDormancy") + facet_wrap(~cancer_type))
dev.off()
pdf("APOBEC_vs_angiogenic_dormancy_cancerwise.pdf", width = 13, height = 9)
p <- ggscatter(prog_expr, x = "mean_APOBEC", y = "AngiogenicDormancy",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"), cor.coef = TRUE,
conf.int = TRUE, alpha = 0.1,cor.coeff.args = list(method = "pearson", label.sep = "\n"))
print(p + labs(x = "APOBEC", y = "AngiogenicDormancy") + facet_wrap(~cancer_type))
dev.off()
setwd("~/Documents/TMD_manuscript_data/RNA_seq")
load("combined_experssion_FPKM.RData")
#Load packages:
library(biomaRt)
library(ConsensusTME)
library(dplyr)
library(corrplot)
library(ggplot2)
#Consensus TME requires gene names to be in the hgnc_symbol format instead of ensembl gene id format therefore this needs to be converted:
genes <- colnames(combined_data)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
G_list <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"),values=genes,mart= mart)
####Select cancer types of interest:
CT <- unique(as.character(combined_data$cancer_type))
##################################################################
########Load immune infiltration estimates for all cancer types:
#################################################################
setwd("~/Documents/Wojciech_manuscript/ImmuneInfiltrationAnalysis")
load("immune_infiltration_ACC.RData")
combined.immune.infiltration <- immune.infiltration
CT <- CT[-1]
for (a in CT) {
print(a)
load(paste("immune_infiltration_",a,".RData",sep = ""))
combined.immune.infiltration <- cbind(combined.immune.infiltration, immune.infiltration)
}
#####Clean up the dataframe
combined.immune.infiltration <- data.frame(t(combined.immune.infiltration))
rownames(combined.immune.infiltration) <- gsub('\\.', '-', rownames(combined.immune.infiltration))
#Select relevant columns and order them
colnames(combined.immune.infiltration)
combined.immune.infiltration <- combined.immune.infiltration[,colnames(combined.immune.infiltration) %in% c("B_cells","T_gamma_delta_cells","Th1_cells","Th2_cells","Th17_cells","Treg_cells","T_central_memory_cells","T_effector_memory_cells","CD8_T_cells","NK_cells","plasmacytoid_Dendritic_cells","Macrophages","Neutrophils","Eosinophils","Mast_cells","Citotoxic_cells","T_helper_cells","Dendritic_cells","Angiogenesis")]
combined.immune.infiltration <- combined.immune.infiltration[, c("B_cells","T_gamma_delta_cells","Th1_cells","Th2_cells","Th17_cells","Treg_cells","T_central_memory_cells","T_effector_memory_cells","CD8_T_cells","NK_cells","plasmacytoid_Dendritic_cells","Macrophages","Neutrophils","Eosinophils","Mast_cells","Citotoxic_cells","T_helper_cells","Dendritic_cells","Angiogenesis")]
combined.immune.infiltration$Barcode <- rownames(combined.immune.infiltration)
###################################
##Add programme score information:
####################################
setwd("~/Documents/GitHub/tumourMassDormancy/Data/ProgrammeScores/")
load("program_expression_scores_updated.RData")
combined_data <- merge(combined.immune.infiltration, prog_expr,
by.x = "Barcode", by.y = "Barcode")
#Cleanup the dataframe
combined_data$SampleID <- NULL
combined_data$PatientID <- NULL
combined_data$Barcode <- NULL
##########################################################
##Programme correlation with immune infiltration estimates
#########################################################
corr_matrix <- cor(combined_data, use = "pairwise.complete.obs")
p_matrix <- cor.mtest(combined_data)$p
dimnames(p_matrix) <- dimnames(corr_matrix)
corr_matrix <- corr_matrix[20:24,1:19]
p_matrix <- p_matrix[20:24, 1:19]
setwd("~/Documents/GitHub/tumourMassDormancy/ImmuneInfiltrationAnalysis/Figures/")
col1 <- colorRampPalette(c("#59ac53","grey95","#8b5aa8"))
pdf(file = paste(Sys.Date(), "immune_correlation_prog.pdf", sep = "_"), height = 6, width = 12)
p <- corrplot(corr_matrix,
tl.col = "black",
p.mat = p_matrix,
pch.cex = 0.8,
pch.col = "firebrick",
col = col1(100))
dev.off()
#######################################################
####Colour phate plots by immune infiltration estimates
#######################################################
setwd("~/Documents/GitHub/tumourMassDormancy/PHATE_analysis/ComBat_results/")
load("phate_coordinates_combat.RData")
combined.immune.infiltration$Barcode <- rownames(combined.immune.infiltration)
phate_coordinates_combat$Barcode <- rownames(phate_coordinates_combat)
phate_coordinates_combat$cluster <- as.factor(phate_coordinates_combat$cluster)
phate_coordinates_combat$cluster <- factor(recode(phate_coordinates_combat$cluster, "3" = "low", "2" = "high", "1" = "mid"), levels = c("low", "mid", "high"))
phate_coordinates_combat <- merge(phate_coordinates_combat, combined.immune.infiltration,
by.x = "Barcode", by.y = "Barcode")
setwd("~/Documents/GitHub/tumourMassDormancy/ImmuneInfiltrationAnalysis/Figures/")
pdf("PHATE_coloured_by_cytotoxic_cell_infiltration.pdf", height = 5, width = 7)
ggplot(phate_coordinates_combat, aes(x=PHATE1, y=PHATE2, colour = Citotoxic_cells)) +
geom_point() +
theme(legend.key.width = unit(1, "cm")) +
scale_color_gradient2(low = "#59ac53", midpoint = mean(phate_coordinates_combat$Citotoxic_cells),mid = "grey95", high = "#8b5aa8") + theme_classic()
dev.off()
pdf("PHATE_coloured_by_Dendritic_cells_infiltration.pdf", height = 5, width = 7)
ggplot(phate_coordinates_combat, aes(x=PHATE1, y=PHATE2, colour = Dendritic_cells)) +
geom_point() +
theme(legend.key.width = unit(1, "cm")) +
scale_color_gradient2(low = "#59ac53", midpoint = mean(phate_coordinates_combat$Dendritic_cells),mid = "grey95", high = "#8b5aa8") + theme_classic()
dev.off()
pdf("PHATE_coloured_by_T_helper_cells_infiltration.pdf", height = 5, width = 7)
ggplot(phate_coordinates_combat, aes(x=PHATE1, y=PHATE2, colour = T_helper_cells)) +
geom_point() +
theme(legend.key.width = unit(1, "cm")) +
scale_color_gradient2(low = "#59ac53", midpoint = mean(phate_coordinates_combat$T_helper_cells),mid = "grey95", high = "#8b5aa8") + theme_classic()
dev.off()
pdf("PHATE_coloured_by_Angiogenesis_infiltration.pdf", height = 5, width = 7)
ggplot(phate_coordinates_combat, aes(x=PHATE1, y=PHATE2, colour = Angiogenesis)) +
geom_point() +
theme(legend.key.width = unit(1, "cm")) +
scale_color_gradient2(low = "#59ac53", midpoint = mean(phate_coordinates_combat$Angiogenesis),mid = "grey95", high = "#8b5aa8") + theme_classic()
dev.off()
library(ggpubr)
library(reshape)
###############################################################
####Boxplot infiltration estimate comparison between TMD groups
###############################################################
#remove unnecessary columns:
phate_coordinates_combat <- phate_coordinates_combat[,colnames(phate_coordinates_combat) %in% c("Citotoxic_cells","T_helper_cells","Dendritic_cells","Angiogenesis","cluster","Barcode")]
melt_annot <- melt(phate_coordinates_combat, id.vars = c("Barcode","cluster"))
my_comparisons <- combn(c("low", "mid", "high"), m = 2, simplify = F)
p <- ggboxplot(melt_annot, x = "cluster", y = "value",
color = "cluster", palette =c("#00AFBB", "#E7B800", "#FC4E07")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif") + # Add pairwise comparisons p-value
stat_compare_means(label.y.npc = "top") +
theme(legend.position = "none")
p <- facet(p, facet.by = "variable", nrow = 1, scales = "fixed")
setwd("~/Documents/Wojciech_manuscript/ImmuneInfiltrationAnalysis/Figures/")
pdf("Boxplot_immune_infiltration_comparison_between_clusters.pdf", height = 4,width = 12)
p
dev.off()
setwd("~/Documents/GitHub/tumourMassDormancy/ImmuneInfiltrationAnalysis/Figures/")
pdf("Boxplot_immune_infiltration_comparison_between_clusters.pdf", height = 4,width = 12)
p
dev.off()
setwd("~/Documents/GitHub/tumourMassDormancy/Data/ProgrammeScores/")
load("programme_scores_and_TMD_assignments.RData")
prog_expr <- prog_expr[,colnames(prog_expr) %in% c("TMD_two_categories_detailed","Barcode")]
prog_expr <- merge(prog_expr, combined.immune.infiltration,
by.x = "Barcode", by.y = "Barcode")
prog_expr <- prog_expr[,colnames(prog_expr) %in% c("Citotoxic_cells","Th1_cells","Th2_cells","Dendritic_cells","TMD_two_categories_detailed","Barcode")]
melt_annot <- melt(prog_expr, id.vars = c("Barcode","TMD_two_categories_detailed"))
melt_annot$TMD_two_categories_detailed <- factor(melt_annot$TMD_two_categories_detailed, levels = c("NO","Angiogenic Dormancy","Immunogenic Dormancy","Angiogenic and Immunogenic Dormancy"))
my_comparisons <- list(c("NO","Immunogenic Dormancy"), c("NO","Angiogenic Dormancy",c("NO","Angiogenic and Immunogenic Dormancy")))
p <- ggboxplot(melt_annot, x = "TMD_two_categories_detailed", y = "value",
fill = "TMD_two_categories_detailed") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif") + # Add pairwise comparisons p-value
stat_compare_means(label.y.npc = "top") + theme_classic()
p <- facet(p, facet.by = "variable", nrow = 1, scales = "fixed") + scale_color_manual(values = c("Angiogenic and Immunogenic Dormancy" = "#1B9E77", "NO" = "grey95", "Angiogenic Dormancy" = "#D95F02", "Immunogenic Dormancy" = "#7570B3"))
setwd("~/Documents/GitHub/tumourMassDormancy/ImmuneInfiltrationAnalysis/Figures/")
pdf("Boxplot_immune_infiltration_comparison_between_TMD_and_nonTMD_samples.pdf", height = 4,width = 12)
p
dev.off()
